/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

 // List of keys on the left and right side of the keyboard
#define KEYS_L  0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53
#define KEYS_R  6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57


/ {
    behaviors {
        // SYMBOLS FOR GRAPHITE LAYOUT -------------------
        sqtnder: morph_single_quote_shift_underscore {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        cmaqtm: morph_comma_shift_question_mark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mindblq: morph_minus_shift_double_quote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp DOUBLE_QUOTES>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slshlst: morph_slash_shift_less_than {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LESS_THAN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // -----------------------------------------------

        // HOME ROW MODS ---------------------------------
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L>;
            hold-trigger-on-release;
        };
        // -----------------------------------------------

        tdc: tap_capsword_dance_capslock {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&caps_word>, <&kp CAPS>;
        };
        tdbs: tap_backspace_dance_ctrl_bspc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };
        tdl0d1: tap_to_0_dance_to_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to 0>, <&to 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            display-name = "Base";
            bindings = <
&kp GRAVE &kp N1 &kp N2      &kp N3      &kp N4       &kp N5                                  &kp N6   &kp N7       &kp N8      &kp N9      &kp N0   &tdc
&kp TAB   &kp B  &kp L       &kp D       &kp W        &kp Z                                   &sqtnder &kp F        &kp O       &kp U       &kp J    &kp SEMI
&kp ESC   &kp N  &hml LGUI R &hml LALT T &hml LCTRL S &kp G                                   &kp Y    &hmr RCTRL H &hmr LALT A &hmr RGUI E &kp I    &cmaqtm
&kp LSHFT &kp Q  &kp X       &kp M       &kp C        &kp V  &kp PSCRN                &kp DEL &kp K    &kp P        &kp DOT     &mindblq    &slshlst &kp RSHFT
                             &kp INS     &kp RALT     &to 2  &mt LC(LA(LSHFT)) SPACE  &kp RET &tdl0d1  &tdbs        &kp K_APP
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbol_layer {
            display-name = "Symbols";
            bindings = <
&kp F12 &kp F1    &kp F2         &kp F3         &kp F4          &kp F5                      &kp F6     &kp F7           &kp F8          &kp F9          &kp F10         &kp F11
&trans  &kp EXCL  &kp AT         &kp LBKT       &kp RBKT        &kp PIPE                    &kp MINUS  &kp KP_N7        &kp KP_N8       &kp KP_N9       &kp KP_MULTIPLY &kp UNDER
&trans  &kp HASH  &hml LGUI DLLR &hml LALT LPAR &hml LCTRL RPAR &kp BSLH                    &kp EQUAL  &hmr RCTRL KP_N4 &hmr LALT KP_N5 &hmr RGUI KP_N6 &kp KP_PLUS     &kp GREATER_THAN
&trans  &kp PRCNT &kp CARET      &kp LBRC       &kp RBRC        &kp AMPS &trans &kp KP_NLCK &kp SLASH  &kp KP_N1        &kp KP_N2       &kp KP_N3       &kp KP_DOT      &kp LESS_THAN
                                 &trans         &trans          &trans   &trans &trans      &trans     &trans           &kp KP_N0
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        system_layer {
            display-name = "System";
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                &trans     &trans    &trans     &kp K_MUTE &kp K_VOL_UP &kp K_VOL_DN
&trans     &trans       &trans       &trans       &trans       &trans                      &kp HOME   &kp PG_DN &kp PG_UP  &kp END    &trans       &trans
&trans     &trans       &trans       &trans       &trans       &trans                      &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &trans       &trans
&trans     &trans       &trans       &trans       &trans       &trans       &trans &trans  &kp K_PREV &kp K_PP  &kp K_NEXT &trans     &trans       &trans
                                     &trans       &trans       &trans       &trans &trans  &trans     &trans    &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };


        extra_1 {
            status = "reserved";
        };

        extra_2 {
            status = "reserved";
        };

        extra_3 {
            status = "reserved";
        };
    };
};
